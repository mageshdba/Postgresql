

//VERSION - PERCONA 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Step 1: PREPARE DIRECTORY 
---------------------------------------
/pgdata
/pglog
/backup
/pgerrorlog


mkdir -p /pgdata/pgsql/
mkdir -p /pglog/pgsql
mkdir -p /pgerrorlog/pgsql/
mkdir -p /pgerrorlog/pgsql/audit/old_logs_audit
mkdir -p /pgdata/tmp/
mkdir -p /backup/scripts/


chown -R postgres:postgres /pgdata/pgsql/
chown -R postgres:postgres /pglog/pgsql/
chown -R postgres:postgres /pgerrorlog/pgsql/
chown -R postgres:postgres /pgdata/tmp/



Step 2: DOWNLOAD AND INSTALL THE PACKAGE
---------------------------------------
cd /backup/software/pgsql/14.6

wget https://downloads.percona.com/downloads/postgresql-distribution-14/14.6/binary/redhat/8/x86_64/ppg-14.6-el8-x86_64-bundle.tar

tar -xvf ppg-14.6-el8-x86_64-bundle.tar
rm -rvf *debug*
rm -rvf ppg-14.6-el8-x86_64-bundle.tar


yum install percona-* -y


Step 2: INITIATE THE DB
---------------------------------------

sudo /usr/pgsql-14/bin/postgresql-14-setup initdb 

This will create the initial data as well as the main configuration file, which will be written to 
/var/lib/pgsql/14/data/postgresql.conf

systemctl enable postgresql-14
systemctl status postgresql-14
systemctl start postgresql-14

service postgresql-14 status


sudo -u postgres psql 

Step 2: RSYNC TO NEW DIRECTORY
---------------------------------------


mkdir -p /pgdata/postgres
mkdir -p /pglog/pgsql/archive

chown -R postgres:postgres /pgdata/postgres
chown -R postgres:postgres /pglog/pgsql/archive

OLD DIR
/var/lib/pgsql/14/data/
NEW DIR
/pgdata/pgsql/

service postgresql-14 stop

sudo rsync -av /var/lib/pgsql/14/data/ /pgdata/pgsql/


--cnf
/var/lib/pgsql/14/data/pg_hba.conf
/var/lib/pgsql/14/data/postgresql.conf

vi  /var/lib/pgsql/14/data/postgresql.conf	

4GB RAM / 4 CORE CPU
data_directory = '/pgdata/postgres/data' # use data in another directory
listen_addresses = '*'              # what IP address(es) to listen on;
port = 4554
max_connections = 10000
shared_buffers = 128MB
wal_buffers
effective_cache_size
max_wal--4GB 
work_mem --2GB
maintenance_work_mem 
Max_parallel_workers -- set to 8 or above)
max_worker_processes --set to 8 or above)
max_parallel_workers_per_gather (pls set to 6 or above)
temp_buffers
Checkpoint timeout -- 30 min and max_val_size as 2gb is required
shared_preload_libraries = 'pg_cron'    # (change requires restart)


vi /var/lib/pgsql/14/data/pg_hba.conf
# IPv4 local connections:
host    all             all             0.0.0.0/0            scram-sha-256



RESTART/START
service postgresql-14 status

LOGIN
sudo -u postgres psql
or
sudo -i -u postgres
or
psql

SHOW data_directory;
   data_directory
--------------------
 /pgdata/postgres
(1 row)


select * from pg_settings where name like '%max_connections%';
select * from pg_settings where name like '%shared_buffers%';
select * from pg_settings where name like '%wal_buffers%';
select * from pg_settings where name like '%effective_cache_size%';
select * from pg_settings where name like '%max_wal%';
select * from pg_settings where name like '%work_mem%';
select * from pg_settings where name like '%maintenance_work_mem%';
select * from pg_settings where name like '%max_parallel_workers%';
select * from pg_settings where name like '%max_worker_processes%';
select * from pg_settings where name like '%max_parallel_workers_per_gather%';
select * from pg_settings where name like '%temp_buffers%';
select * from pg_settings where name like '%checkpoint%';
select * from pg_settings where name like '%pg_stat_statements%';
select * from pg_settings where name like '%statement%';
select * from pg_settings where name like '%pg_cron%';

SHOW data_directory;
SHOW config_file;
SHOW hba_file;
show shared_preload_libraries ;




/usr/pgsql-14/bin/pg_ctl -D /dbdata/pgsql/data/ stop 


CREATE USER m2padmin WITH PASSWORD 'XXXXXXX';
ALTER USER m2padmin WITH SUPERUSER login;



select * from pg_stat_activity;
select name,setting,unit from pg_settings where name like '%connect%';

alter system set max_connections = 1500;


select name,setting,unit from pg_settings where name in ('maintenance_work_mem',
'max_prepared_transactions',
'max_stack_depth',
'min_dynamic_shared_memory',
'shared_buffers',
'shared_memory_type',
'temp_buffers',
'work_mem',
'max_parallel_workers',
'max_worker_processes',
'max_parallel_workers_per_gather',
'wal_buffers',
'max_wal_size',
'min_wal_size',
'checkpoint_timeout',
'effective_cache_size',
'max_connections',
'shared_preload_libraries',
'pgaudit.log',
'log_filename');



==================================================



ALL THE EXTENSIONS:
-------------------------------

--On CNF 
shared_preload_libraries = 'pgcrypto,pg_cron,pg_stat_statements,timescaledb,dblink,pgaudit,pgauditlogtofile'    # (change requires restart)


--Install Components 
sudo yum install percona-haproxy -y
sudo yum install percona-patroni -y
sudo yum install percona-pg_repack14 -y
sudo yum install percona-pgaudit -y
sudo yum install percona-pgaudit14_set_user -y
sudo yum install percona-pgbackrest -y
sudo yum install percona-pgbadger -y
sudo yum install percona-pgbouncer -y
sudo yum install percona-postgresql14-contrib -y
sudo yum install percona-wal2json14 -y
sudo yum install percona-pgaudit.x86_64 -y
yum install  https://download.postgresql.org/pub/repos/yum/14/redhat/rhel-8-x86_64/pg_cron_14-1.4.1-1.rhel8.x86_64.rpm -y
yum install postgresql14-contrib -y
yum install pgauditlogtofile_14.x86_64 -y


--Create in psql
CREATE EXTENSION dblink;
create extension plpgsql;
create extension pgcrypto;
create extension pg_stat_statements;
create extension pg_cron;
create extension timescaledb;
CREATE EXTENSION timescaledb_toolkit;
create extension pgaudit;
create extension pgauditlogtofile;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1.pgcrypto

download CONTRIB 
yum install postgresql14-contrib -y

create extension pgcrypto;
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

2.pg_cron
create extension pg_cron;

select * from pg_extension;


yum install  https://download.postgresql.org/pub/repos/yum/14/redhat/rhel-8-x86_64/pg_cron_14-1.4.1-1.rhel8.x86_64.rpm -y
(or)
yum install https://download.postgresql.org/pub/repos/yum/15/redhat/rhel-8-x86_64/pg_cron_15-1.4.2-1.rhel8.x86_64.rpm -y

shared_preload_libraries = 'pg_cron'    # (change requires restart)

postgres=# create extension pg_cron;
CREATE EXTENSION


select * from pg_extensions;

postgres=# select * from pg_extension;
  oid  | extname | extowner | extnamespace | extrelocatable | extversion |         extconfig         | extcondition
-------+---------+----------+--------------+----------------+------------+---------------------------+---------------
 14682 | plpgsql |       10 |           11 | f              | 1.0        |                           |
 16942 | pg_cron |       10 |         2200 | f              | 1.4        | {16945,16944,16964,16963} | {"","","",""}
(2 rows)

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


4. TIMESCALEDB Extension 2.7.2

yum install https://download.postgresql.org/pub/repos/yum/reporpms/EL-$(rpm -E %{rhel})-x86_64/pgdg-redhat-repo-latest.noarch.rpm -y

(or)

tee /etc/yum.repos.d/timescale_timescaledb.repo <<EOL
[timescale_timescaledb]
name=timescale_timescaledb
baseurl=https://packagecloud.io/timescale/timescaledb/el/$(rpm -E %{rhel})/\$basearch
repo_gpgcheck=1
gpgcheck=0
enabled=1
gpgkey=https://packagecloud.io/timescale/timescaledb/gpgkey
sslverify=1
sslcacert=/etc/pki/tls/certs/ca-bundle.crt
metadata_expire=300
EOL

yum install timescaledb-2-postgresql-14 -y

For more information on TimescaleDB, please visit the following links:

 1. Getting started: https://docs.timescale.com/timescaledb/latest/getting-started
 2. API reference documentation: https://docs.timescale.com/api/latest
 3. How TimescaleDB is designed: https://docs.timescale.com/timescaledb/latest/overview/core-concepts

Note: Please enable telemetry to help us improve our product by running: ALTER DATABASE "postgres" SET timescaledb.telemetry_level = 'basic';

CREATE EXTENSION timescaledb;



WELCOME TO
 _____ _                               _     ____________
|_   _(_)                             | |    |  _  \ ___ \
  | |  _ _ __ ___   ___  ___  ___ __ _| | ___| | | | |_/ /
  | | | |  _ ` _ \ / _ \/ __|/ __/ _` | |/ _ \ | | | ___ \
  | | | | | | | | |  __/\__ \ (_| (_| | |  __/ |/ /| |_/ /
  |_| |_|_| |_| |_|\___||___/\___\__,_|_|\___|___/ \____/
               Running version 2.7.0
               
               
               
postgres=# select * from pg_extension;
  oid  |   extname   | extowner | extnamespace | extrelocatable | extversion |                                                                                 extconfig
                |                            extcondition
-------+-------------+----------+--------------+----------------+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------
----------------+--------------------------------------------------------------------
 14682 | plpgsql     |       10 |           11 | f              | 1.0        |
                |
 16404 | timescaledb |       10 |         2200 | f              | 2.7.0      | {16421,16422,16443,16456,16470,16469,16488,16487,16503,16502,16525,16541,16542,16558,16570,16571,16613,16620,16642,16654,16664,16668,16684,16703,16718,167
39,16745,16742} | {"","","","","","","","","","","","","","","","WHERE id >= 1000","+
       |             |          |              |                |            |
                |   WHERE KEY = 'exported_uuid' ","","","","","","","","","","",""}
(2 rows)

postgres=#  SELECT * FROM pg_available_extensions WHERE name='timescaledb';
    name     | default_version | installed_version |                              comment
-------------+-----------------+-------------------+-------------------------------------------------------------------
 timescaledb | 2.7.0           | 2.7.0             | Enables scalable inserts and complex queries for time-series data
(1 row)

postgres=#

=======================
ERRORS AND FIX

postgres=#
postgres=# SELECT distinct  sourcefile FROM pg_settings;
               sourcefile
----------------------------------------

 /var/lib/pgsql/14/data/postgresql.conf
(2 rows)

postgres=#

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



5. TIMESCALEDB Extension 2.7.2

--------------------------------


--Install REPO

yum install https://download.postgresql.org/pub/repos/yum/reporpms/EL-$(rpm -E %{rhel})-x86_64/pgdg-redhat-repo-latest.noarch.rpm -y


--Edit Repo

tee /etc/yum.repos.d/timescale_timescaledb.repo <<EOL
[timescale_timescaledb]
name=timescale_timescaledb
baseurl=https://packagecloud.io/timescale/timescaledb/el/$(rpm -E %{rhel})/\$basearch
repo_gpgcheck=1
gpgcheck=0
enabled=1
gpgkey=https://packagecloud.io/timescale/timescaledb/gpgkey
sslverify=1
sslcacert=/etc/pki/tls/certs/ca-bundle.crt
metadata_expire=300
EOL



--Install RPM
yum install timescaledb-2-postgresql-14

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

6. Toolkit

--Install TimescaleDB Toolkit:
yum install timescaledb-toolkit-postgresql-14 -y

--Create the Toolkit extension in the database:
CREATE EXTENSION timescaledb_toolkit;


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


7. DBLINK 
===========================================

1. Download the package
	 wget https://download.postgresql.org/pub/repos/yum/14/redhat/rhel-8-x86_64/postgresql14-contrib-14.2-1PGDG.rhel8.x86_64.rpm

2. Try to install it. While trying in Recon360 PreProd, we had received error
	[root@aws-preprd-recon360-db01 ext]# yum install postgresql14-contrib-14.2-1PGDG.rhel8.x86_64.rpm
	Updating Subscription Management repositories.
	Last metadata expiration check: 2:41:58 ago on Thu 12 May 2022 10:19:51 AM IST.
	No match for argument: postgresql14-contrib-14.2-1PGDG.rhel8.x86_64.rpm
	Error: Unable to find a match

3. Hence manually extracted the contents
	rpm2cpio postgresql14-contrib-14.2-1PGDG.rhel8.x86_64.rpm | cpio -idmv

4. Find the dblink control file in the same directory in usr/pgsql-14/share/extension/
	dblink--1.0--1.1.sql
	dblink--1.1--1.2.sql
	dblink--1.2.sql
	dblink.control

5. Copy the above files in /usr/pgsql-14/share/extension/ and change the permission to 644

6. Find the dblink.so file in path where you had extracted the rpm (usr/pgsql-14/lib/)
	dblink.so

7. Copy the dblink.so file to /usr/pgsql-14/lib/ and change the permission to 755

8. Add the dblink name in the shared_preload_libraries in /var/lib/pgsql/14/data/postgresql.conf

9. Login to postgres and create the dblink extension

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

8. PGAUDIT 
===========================================
 yum install pgaudit16_14.x86_64

yum install percona-pgaudit.x86_64 -y

Last metadata expiration check: 2:48:33 ago on Fri 18 Mar 2022 04:33:01 PM IST.
Dependencies resolved.
==============================================================================================================================================================================
 Package                                     Architecture                          Version                                        Repository                             Size
==============================================================================================================================================================================
Installing:
 pgaudit16_14                                x86_64                                1.6.2-1.rhel8                                  pgdg14                                 56 k

Transaction Summary
==============================================================================================================================================================================
Install  1 Package

Total download size: 56 k
Installed size: 100 k
Is this ok [y/N]: y
Downloading Packages:
pgaudit16_14-1.6.2-1.rhel8.x86_64.rpm                                                                                                          48 kB/s |  56 kB     00:01
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[root@az-sin-m2p-preprod-db01 bitcode]# cd /usr/pgsql-14/lib/
[root@az-sin-m2p-preprod-db01 lib]# ls -latr


[root@az-sin-m2p-preprod-db01 lib]# vi /var/lib/pgsql/14/data/postgresql.conf
[root@az-sin-m2p-preprod-db01 lib]# su - postgres
Last login: Thu Mar 17 18:20:56 IST 2022 on pts/0
[postgres@az-sin-m2p-preprod-db01 ~]$ psql
psql (14.0)
Type "help" for help.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Checking if the extension is available before restart of postgres
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
postgres=# select * from pg_extension;
  oid  | extname | extowner | extnamespace | extrelocatable | extversion |         extconfig         | extcondition
-------+---------+----------+--------------+----------------+------------+---------------------------+---------------
 14682 | plpgsql |       10 |           11 | f              | 1.0        |                           |
 16948 | pg_cron |       10 |         2200 | f              | 1.4        | {16951,16950,16970,16969} | {"","","",""}
(2 rows)


postgres=# create extension pgaudit;
CREATE EXTENSION
postgres=# select * from pg_extension;
  oid  | extname | extowner | extnamespace | extrelocatable | extversion |         extconfig         | extcondition
-------+---------+----------+--------------+----------------+------------+---------------------------+---------------
 14682 | plpgsql |       10 |           11 | f              | 1.0        |                           |
 16948 | pg_cron |       10 |         2200 | f              | 1.4        | {16951,16950,16970,16969} | {"","","",""}
 16988 | pgaudit |       10 |         2200 | t              | 1.6.2      |                           |
(3 rows)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Verifyig audit parameters before enabling:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
postgres=# 	
            name            | setting
----------------------------+---------
 pgaudit.log                | none
 pgaudit.log_catalog        | on
 pgaudit.log_client         | off
 pgaudit.log_level          | log
 pgaudit.log_parameter      | off
 pgaudit.log_relation       | off
 pgaudit.log_rows           | off
 pgaudit.log_statement      | on
 pgaudit.log_statement_once | off
 pgaudit.role               |
(10 rows)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Enabling audit for DDL and Write opeations:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
postgres=# set pgaudit.log='write,ddl';
SET
postgres=# SELECT name,setting FROM pg_settings WHERE name LIKE 'pgaudit%';
            name            |  setting
----------------------------+-----------
 pgaudit.log                | write,ddl
 pgaudit.log_catalog        | on
 pgaudit.log_client         | off
 pgaudit.log_level          | log
 pgaudit.log_parameter      | off
 pgaudit.log_relation       | off
 pgaudit.log_rows           | off
 pgaudit.log_statement      | on
 pgaudit.log_statement_once | off
 pgaudit.role               |
(10 rows)

postgres=# create table testaudit(name varchar(10),sign varchar(10));
CREATE TABLE

postgres=# insert into testaudit values('Harish','hari');
INSERT 0 1
postgres=# insert into testaudit values('Sharat^C'hari');
postgres=# alter table testaudit add column message varchar(50);
ALTER TABLE
                                               ^
postgres=# alter table testaudit alter column name type varchar(20);
ALTER TABLE
postgres=# insert into testaudit values('Sharath Shankar','Sharath S','To check value');
INSERT 0 1
postgres=# update testaudit set sign='Sharath' where name='Sharath Shankar';
UPDATE 1
postgres=# insert into testaudit values('Mohan Rao','MohanR','To check deletion');
INSERT 0 1
postgres=# delete from testaudit where sign='MohanR';
DELETE 1
postgres=#


9. PGAUDITLOGTOFILE
===========================================

[root@aws-aps1-prd-bitool-pgdb-01 ~]# yum search pgaudit
yum install pgauditlogtofile_14.x86_64 -y

aws s3 sync s3://m2p-s3-prd-db-bkp/software/postgres/extensions/pgauditlogtofile/ /usr/pgsql-14/share/extension 

postgres=# CREATE EXTENSION pgauditlogtofile;
CREATE EXTENSION


--Add it in conf 
pgaudit.log_directory='/dberrlog/audit'
pgaudit.log='write,ddl'



